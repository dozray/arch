<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- sqlServer 配置 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"></property> 
		<property name="url" value="jdbc:sqlserver://localhost:1433;DatabaseName=OA"></property> 
		<property name="username" value="sa"></property> <property name="password" 
		value=""></property> </bean> -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:res:/hsqldb/test" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<!-- 组件扫描 ： use-default-filters属性设为false，意即在base-package所有被宣告为@Component和@Configuration等target 
		Class不予注册为bean，由filter子标签代劳。 -->
	<context:component-scan base-package="dao.daoimpl"	use-default-filters="false">
		<context:exclude-filter type="regex" expression="dao.daoimpl" />
	</context:component-scan>
	<!-- sessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:/entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
				<!-- hibernate.current_session_context_class 是hibernate 4使用session事物的模式 
					1: org.hibernate.context.internal.ThreadLocalSessionContext - 当前session通过当前执行的线程来跟踪和界定。 
					2: org.hibernate.context.internal.JTASessionContext- 当前session根据JTA来跟踪和界定。这和以前的仅支持JTA的方法是完全一样的。 
					3：org.hibernate.context.internal.ManagedSessionContext 使用spring时 默认是 ，用spring的事务管理 
					则用org.springframework.orm.hibernate4.SpringSessionContext -->
				<!-- <prop key="hibernate.cache.use_query_cache">true</prop> <prop key="hibernate.cache.use_second_level_cache"> 
					true </prop> <prop key="hibernate.cache.provider_class"> org.hibernate.cache.internal.NoCacheProvider 
					</prop> -->
				<!-- <prop key="hibernate.proxool.pool_alias">myDataSource</prop> <prop 
					key="hibernate.proxool.xml">proxool.xml</prop> org.hibernate.cache.EhCacheProvider 
					<prop key="hibernate.connection.provider_class"> org.hibernate.service.jdbc.connections.internal.ProxoolConnectionProvider 
					</prop> <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop> 
					<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop> 
					<prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop> 
					<prop key="hibernate.search.default.indexBase">H:\indexed</prop> hibernate 
					3.3以上 <property name="hibernate.cache.region.factory_class"> net.sf.ehcache.hibernate.EhCacheRegionFactory</property> 
					或 <property name="hibernate.cache.region.factory_class"> net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory</property> 
					Hibernate 3.0 - 3.2 <property name="hibernate.cache.provider_class"> net.sf.ehcache.hibernate.EhCacheProvider</property> 
					或 <property name="hibernate.cache.provider_class"> net.sf.ehcache.hibernate.SingletonEhCacheProvider</property> -->
			</props>
		</property>
	</bean>
	<!-- 事务 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="REQUIRED" />
			<tx:method name="load*" read-only="true" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" propagation="REQUIRED" />
			<tx:method name="search*" read-only="true" propagation="REQUIRED" />
			<tx:method name="query*" read-only="true" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="attach*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* biz.bizimpl.*.*(..))"	id="bizMethod" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="bizMethod" />
	</aop:config>
	<bean id="daoSupport" class="dao.daoimpl.DaoSupport">
		<!-- <constructor-arg name="sessionFactory" ref="sessionFactory"></constructor-arg> -->
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	<bean id="userInfoDao" class="dao.daoimpl.UserInfoDaoImpl"></bean>
	<bean id="userPowerDao" class="dao.daoimpl.UserPowerDaoImpl"></bean>
	<bean id="userInfoBiz" class="biz.bizimpl.UserInfoBizImpl">
		<property name="userInfoDao" ref="userInfoDao"></property>
	</bean>
	<bean id="userPowerBiz" class="biz.bizimpl.UserPowerBizImpl">
		<property name="userPowerDao" ref="userPowerDao"></property>
	</bean>

	<!-- 测试，不加security -->
	<bean id="test" class="biz.bizimpl.Test">
		<property name="userInfoDao" ref="userInfoDao"></property>
	</bean>
	<!-- 测试 -->
	<bean id="testSecurity" class="action.TestSecurity"></bean>
</beans>

